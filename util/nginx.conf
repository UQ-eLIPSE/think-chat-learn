user   www  www;
worker_processes  1;
events {
    worker_connections  1024;
}

http {
    include            /opt/local/etc/nginx/mime.types;
    default_type       application/octet-stream;
    sendfile           on;
    keepalive_timeout  65;

	disable_symlinks off;

    # access control config
    map $uri $acl {
        # by default, we only allow any authenticated user.
        # to make the whole site public, comment out the next line and
        # uncomment the one below it
        default "allow:user:*";
        #default "allow:*";

        # phpmyadmin single sign-on will automatically log anyone
        # who is allowed by this ACL in as "root"
        ~^/phpmyadmin "allow:user:*local, allow:group:'eait:itig'";

        # example: protect the private_files directory
        #~^/private_files/ "allow:user:uquser1, allow:group:'uq:UQ_ldap_group'";

        # example: make the /public directory public
        #~^/ "allow:*";

        # sometimes browsers get confused if favicon.ico redirects, so make
        # it always public.
        /favicon.ico "allow:*";
    }

	map $http_upgrade $connection_upgrade {
		default	upgrade;
		''	close;
	}

	server {
		listen 80 default_server;
		listen [::]:80 default_server;
		server_name _;
		location / { rewrite ^ https://$host$request_uri? permanent; }
	}

	server {
		listen 443 default_server;
		listen [::]:443 default_server;
		server_name _;
		return 404;
	}

	server {
		listen 443;
		listen [::]:443;
		server_name mc-tst.uqcloud.net;
        root         /var/www/htdocs/mcq_client;

        # pretend we got the request over https
        set $ssl on;

        include "set_cookie.conf";
        rewrite_by_lua_file "etc/nginx/lua/auth_filter.lua";



        location / {
            proxy_pass http://127.0.0.1:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

	location /socket.io {
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		proxy_pass http://localhost:8080;
		proxy_read_timeout 120s;
		client_max_body_size 0;
	}

        # copy-paste any application server sections you want here
	 location @dflapp {
            # uncomment this for jsp/tomcat to handle unknown URIs
            #proxy_pass http://127.0.0.1:8080;

            # uncomment this for mono/aspx to handle unknown URIs
            #include fastcgi.conf;
            #fastcgi_param PATH_INFO "";
            #fastcgi_pass unix:/var/run/mono/fastcgi.sock;

            # uncomment this for rails to handle unknown URIs
            # (you will need to adjust the "root" directive, above,
            #  as well, if you want to use rails)
            #proxy_pass http://127.0.0.1:8000;
        }

        #location ~ \.php$ {
        #    location ~ \..*/.*\.php$ {return 404;}
        #    include fastcgi.conf;
        #    fastcgi_pass unix:/var/run/php-fpm.sock;
        #}

        location ~ \.jsp$ {
            proxy_pass http://127.0.0.1:8080;
        }

        location ~ \.aspx$ {
            include fastcgi.conf;
            fastcgi_param PATH_INFO "";
            fastcgi_pass unix:/var/run/mono/fastcgi.sock;
        }

        # you can remove this if you do not want to use phpmyadmin
        location /phpmyadmin {
            alias /var/www/phpmyadmin;
            try_files $uri $uri/ =404;
            index index.html index.php;
            location ~ /phpmyadmin(/.*\.php)$ {
                set $script $1;
                location ~ \..*/.*\.php$ {return 404;}
                include fastcgi_params;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$script;
                fastcgi_pass unix:/var/run/php-fpm.sock;
            }
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   share/nginx/html;
        }
    }
}
