version: '3.7'
services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client-app
    volumes:
      - ./client:/var/www/think-chat-learn/client
      - ./common:/var/www/think-chat-learn/common
      - ./common.env:/var/www/think-chat-learn/common.env
      # - ./client.env:/var/www/think-chat-learn/client.env
    expose:
      - "3000"
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - NODE_ENV=development  
    networks:
      - network
    depends_on:
      - server
      - mongodb

  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    container_name: admin-app
    volumes:
      - ./admin:/var/www/think-chat-learn/admin
      - ./common:/var/www/think-chat-learn/common
      - ./common.env:/var/www/think-chat-learn/common.env
      # - ./admin.env:/var/www/think-chat-learn/admin.env
    expose:
      - "4000"
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - NODE_ENV=development  
    networks:
      - network
    depends_on:
      - server
      - mongodb
      - client

  intermediate:
    build:
      context: ./intermediate
      dockerfile: Dockerfile
    container_name: intermediate-app
    volumes:
      - ./intermediate:/var/www/think-chat-learn/intermediate
      - ./common:/var/www/think-chat-learn/common
      - ./common.env:/var/www/think-chat-learn/common.env
      # - ./intermediate.env:/var/www/think-chat-learn/intermediate.env
    expose:
      - "5000"
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - NODE_ENV=development    
    networks:
      - network
    depends_on:
      - server
      - mongodb
      - admin

  server:
    build:
      context: ./server
    container_name: server-app
    volumes:
      - ./server:/var/www/think-chat-learn/server
      - ./common:/var/www/think-chat-learn/common
      - ./common.env:/var/www/think-chat-learn/common.env
      - ./server.env:/var/www/think-chat-learn/server.env
    expose:
      - "8080"
    ports:
      - "8080:8080"
    networks:
      - network
  
  mongodb:
    image: mongo:latest
    container_name: mongo-db
    # volumes:
    #   - ./mongodb:/data/db
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    ports:
      - '27000:27017'
    networks:
      - network
    logging:
      driver: none 


#Docker Networks
networks:
  network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local